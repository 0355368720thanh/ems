Index: app/src/main/java/com/example/expensemanagementstudent/TransactionActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.expensemanagementstudent;\r\n\r\nimport android.app.Activity;\r\nimport android.app.DatePickerDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.res.ColorStateList;\r\nimport android.os.Bundle;\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.ImageButton;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.expensemanagementstudent.db.CategoryDB;\r\nimport com.example.expensemanagementstudent.db.DatabaseHelper;\r\nimport com.example.expensemanagementstudent.db.ExpenseDB;\r\nimport com.example.expensemanagementstudent.model.ExpenseViewModel;\r\nimport com.google.android.material.button.MaterialButton;\r\nimport com.google.android.material.button.MaterialButtonToggleGroup;\r\nimport com.google.android.material.textfield.TextInputEditText;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\n\r\npublic class TransactionActivity extends AppCompatActivity {\r\n    private DatabaseHelper dbHelper;\r\n    private ExpenseDB expenseDB;\r\n    private CategoryDB categoryDB;\r\n    private Spinner categorySpinner;\r\n    private ArrayAdapter<String> adapter;\r\n    private MaterialButton btnExpense, btnIncome;\r\n    ExpenseViewModel expenseViewModel;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_transaction);\r\n\r\n        dbHelper = new DatabaseHelper(this);\r\n        categoryDB = new CategoryDB(this);\r\n        expenseDB = new ExpenseDB(this);\r\n\r\n        ImageButton btnBack = findViewById(R.id.btnBack);\r\n        TextInputEditText inputAmount = findViewById(R.id.input_amount);\r\n        MaterialButtonToggleGroup toggleGroup = findViewById(R.id.transaction_type_toggle);\r\n        Button btnSubmit = findViewById(R.id.btn_submit);\r\n        TextView amountErrorMessage = findViewById(R.id.amount_error_message);\r\n        categorySpinner = findViewById(R.id.category_spinner);\r\n\r\n\r\n\r\n\r\n        btnBack.setOnClickListener(v -> onBackPressed());\r\n        toggleGroup.check(R.id.btn_expense);\r\n        btnSubmit.setText(\"Add Expense\");\r\n\r\n        // Initialize toggle buttons for styling\r\n        btnExpense = findViewById(R.id.btn_expense);\r\n        btnIncome = findViewById(R.id.btn_income);\r\n\r\n        toggleGroup.addOnButtonCheckedListener((group, checkedId, isChecked) -> {\r\n            if (isChecked) {\r\n                if (checkedId == R.id.btn_expense) {\r\n                    btnSubmit.setText(\"Add Expense\");\r\n                    updateCategorySpinner(1);  // Only show categories for expense\r\n                    updateToggleButtonStyles(R.id.btn_expense);\r\n                } else if (checkedId == R.id.btn_income) {\r\n                    btnSubmit.setText(\"Add Income\");\r\n                    updateCategorySpinner(0);  // Only show categories for income\r\n                    updateToggleButtonStyles(R.id.btn_income);\r\n                }\r\n            }\r\n        });\r\n\r\n        ArrayList<String> categoryNames = categoryDB.getCategoryNamesByType(1);\r\n        adapter = new ArrayAdapter<>(\r\n                this,\r\n                android.R.layout.simple_spinner_item,\r\n                categoryNames\r\n        );\r\n        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        categorySpinner.setAdapter(adapter);\r\n\r\n        // Format amount input\r\n        inputAmount.addTextChangedListener(new TextWatcher() {\r\n            private String current = \"\";\r\n\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {}\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {}\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n                if (!s.toString().equals(current)) {\r\n                    inputAmount.removeTextChangedListener(this);\r\n\r\n                    try {\r\n                        String input = s.toString().replaceAll(\"[,.\\\\s]\", \"\"); // Remove existing formatting\r\n                        if (!input.isEmpty()) {\r\n                            long parsedAmount = Long.parseLong(input); // Parse the number\r\n\r\n                            if (parsedAmount > 1_000_000_000) { // Check for max limit\r\n                                amountErrorMessage.setText(\"Maximum amount is 999,999,999.99\");\r\n                                amountErrorMessage.setVisibility(View.VISIBLE);\r\n                            } else {\r\n                                amountErrorMessage.setVisibility(View.GONE);\r\n                            }\r\n\r\n                            current = String.format(\"%,d\", parsedAmount).replace(\",\", \".\"); // Add formatting\r\n                            inputAmount.setText(current);\r\n                            inputAmount.setSelection(current.length()); // Move cursor to end\r\n                        } else {\r\n                            amountErrorMessage.setVisibility(View.GONE);\r\n                        }\r\n                    } catch (NumberFormatException e) {\r\n                        amountErrorMessage.setVisibility(View.GONE);\r\n                    }\r\n\r\n                    inputAmount.addTextChangedListener(this);\r\n                }\r\n            }\r\n        });\r\n\r\n        // Other initialization code\r\n        TextInputEditText inputDate = findViewById(R.id.input_date);\r\n        TextInputEditText inputNotes = findViewById(R.id.input_notes);\r\n\r\n        // Set default date to today\r\n        Calendar calendar = Calendar.getInstance();\r\n        inputDate.setText(formatDate(calendar));\r\n\r\n        // Date picker for transaction date\r\n        inputDate.setOnClickListener(v -> {\r\n            DatePickerDialog datePicker = new DatePickerDialog(this,\r\n                    (view, year, month, dayOfMonth) -> {\r\n                        calendar.set(year, month, dayOfMonth);\r\n                        inputDate.setText(formatDate(calendar));\r\n                    },\r\n                    calendar.get(Calendar.YEAR),\r\n                    calendar.get(Calendar.MONTH),\r\n                    calendar.get(Calendar.DAY_OF_MONTH)\r\n            );\r\n            datePicker.show();\r\n        });\r\n\r\n        btnSubmit.setOnClickListener(v -> {\r\n            String amountText = inputAmount.getText().toString().replaceAll(\"[,.\\\\s]\", \"\").trim(); // Remove formatting\r\n            if (amountText.isEmpty()) {\r\n                amountErrorMessage.setText(\"Amount is required\");\r\n                amountErrorMessage.setVisibility(View.VISIBLE);\r\n                return;\r\n            }\r\n\r\n            try {\r\n                long amount = Long.parseLong(amountText);\r\n                if (amount > 1_000_000_000) {\r\n                    amountErrorMessage.setText(\"Maximum amount is 999,999,999.99\");\r\n                    amountErrorMessage.setVisibility(View.VISIBLE);\r\n                    return;\r\n                }\r\n\r\n                amountErrorMessage.setVisibility(View.GONE); // Clear error if valid\r\n\r\n                String category = categorySpinner.getSelectedItem().toString();\r\n                String date = inputDate.getText().toString();\r\n                String notes = inputNotes.getText().toString();\r\n\r\n                int type = (toggleGroup.getCheckedButtonId() == R.id.btn_income) ? 1 : 0;\r\n\r\n                SharedPreferences sharedPreferences = getSharedPreferences(\"LoginPrefs\", Context.MODE_PRIVATE);\r\n                int userId = sharedPreferences.getInt(\"userId\", -1);\r\n                if (userId == -1) {\r\n                    Toast.makeText(this, \"User ID not found. Please log in again.\", Toast.LENGTH_SHORT).show();\r\n                    finish();\r\n                    return;\r\n                }\r\n\r\n                long transactionId = expenseDB.addTransaction(type, amount, notes, date, userId, categoryDB.getCategoryId(category));\r\n                if (transactionId != -1) {\r\n                    String successMessage = (type == 1) ? \"Income saved successfully\" : \"Expense saved successfully\";\r\n                    Toast.makeText(this, successMessage, Toast.LENGTH_SHORT).show();\r\n\r\n                    finish();\r\n                } else {\r\n                    Toast.makeText(this, \"Error saving transaction\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            } catch (NumberFormatException e) {\r\n                amountErrorMessage.setText(\"Invalid amount entered\");\r\n                amountErrorMessage.setVisibility(View.VISIBLE);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean dispatchTouchEvent(MotionEvent event) {\r\n        // Check if the touch event is outside the currently focused view\r\n        if (event.getAction() == MotionEvent.ACTION_DOWN) {\r\n            View view = getCurrentFocus();\r\n            if (view instanceof TextInputEditText) {\r\n                // Clear focus and hide keyboard\r\n                view.clearFocus();\r\n                InputMethodManager imm = (InputMethodManager) getSystemService(INPUT_METHOD_SERVICE);\r\n                if (imm != null) {\r\n                    imm.hideSoftInputFromWindow(view.getWindowToken(), 0);\r\n                }\r\n            }\r\n        }\r\n        return super.dispatchTouchEvent(event);\r\n    }\r\n\r\n    // Helper method to format the date\r\n    private String formatDate(Calendar calendar) {\r\n        return android.text.format.DateFormat.format(\"dd-MM-yyyy\", calendar).toString();\r\n    }\r\n\r\n    private void updateCategorySpinner(int type) {\r\n        ArrayList<String> categoryNames = categoryDB.getCategoryNamesByType(type);\r\n        adapter.clear();\r\n        adapter.addAll(categoryNames);\r\n        adapter.notifyDataSetChanged();\r\n    }\r\n\r\n    private void updateToggleButtonStyles(int checkedId) {\r\n        int selectedColor = getResources().getColor(R.color.toggle_selected);\r\n        int selectedTextColor = getResources().getColor(R.color.toggle_text_selected);\r\n        int unselectedColor = getResources().getColor(R.color.toggle_unselected);\r\n        int unselectedTextColor = getResources().getColor(R.color.toggle_text_unselected);\r\n\r\n        if (checkedId == R.id.btn_expense) {\r\n            btnExpense.setBackgroundTintList(ColorStateList.valueOf(selectedColor));\r\n            btnExpense.setTextColor(ColorStateList.valueOf(selectedTextColor));\r\n\r\n            btnIncome.setBackgroundTintList(ColorStateList.valueOf(unselectedColor));\r\n            btnIncome.setTextColor(ColorStateList.valueOf(unselectedTextColor));\r\n        } else if (checkedId == R.id.btn_income) {\r\n            btnIncome.setBackgroundTintList(ColorStateList.valueOf(selectedColor));\r\n            btnIncome.setTextColor(ColorStateList.valueOf(selectedTextColor));\r\n\r\n            btnExpense.setBackgroundTintList(ColorStateList.valueOf(unselectedColor));\r\n            btnExpense.setTextColor(ColorStateList.valueOf(unselectedTextColor));\r\n        }\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/expensemanagementstudent/TransactionActivity.java b/app/src/main/java/com/example/expensemanagementstudent/TransactionActivity.java
--- a/app/src/main/java/com/example/expensemanagementstudent/TransactionActivity.java	(revision 17fe28875a14ff1e418e12c68499d419e098d68e)
+++ b/app/src/main/java/com/example/expensemanagementstudent/TransactionActivity.java	(date 1733158537699)
@@ -1,9 +1,7 @@
 package com.example.expensemanagementstudent;
 
-import android.app.Activity;
 import android.app.DatePickerDialog;
 import android.content.Context;
-import android.content.Intent;
 import android.content.SharedPreferences;
 import android.content.res.ColorStateList;
 import android.os.Bundle;
@@ -24,7 +22,6 @@
 import com.example.expensemanagementstudent.db.CategoryDB;
 import com.example.expensemanagementstudent.db.DatabaseHelper;
 import com.example.expensemanagementstudent.db.ExpenseDB;
-import com.example.expensemanagementstudent.model.ExpenseViewModel;
 import com.google.android.material.button.MaterialButton;
 import com.google.android.material.button.MaterialButtonToggleGroup;
 import com.google.android.material.textfield.TextInputEditText;
@@ -39,7 +36,7 @@
     private Spinner categorySpinner;
     private ArrayAdapter<String> adapter;
     private MaterialButton btnExpense, btnIncome;
-    ExpenseViewModel expenseViewModel;
+
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
